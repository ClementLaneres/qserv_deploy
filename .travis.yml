sudo: required
services: docker
language: minimal

env:
  global:
    - CONFIG_DIR=$HOME/.lsst/qserv-cluster
    - TF_DATA_DIR=$CONFIG_DIR/terraform
    - TF_VAR_lsst_config_path=$CONFIG_DIR
    - KUBECTL_VERSION=1.9.0
    - KUBECONFIG=$HOME/.lsst/qserv-cluster/kubeconfig
    - TAG=testing

before_install:
  - mkdir -p $TF_DATA_DIR
  - ssh-keygen -f ~/.ssh/id_rsa -t rsa -N ''
  - wget -O /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.11.7/terraform_0.11.7_linux_amd64.zip
  - sudo unzip /tmp/terraform.zip -d /usr/local/bin
  - sudo chmod +x /usr/local/bin/terraform
  - cd ./openstack/terraform

install:
  - terraform init .
  - terraform apply --auto-approve --input=false -var 'user_name=travis' -var "instance_prefix=travis-${TRAVIS_BUILD_NUMBER}-" --var-file=./terraform.tfvars.ci .
#  - sudo apt-get install -y liblz4-tool python3-yaml
#  - sudo wget -O /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl
#  - sudo chmod +x /usr/local/bin/kubectl
#  - ./k8s/install-k8s.sh
#  - ./k8s/configure-k8s.sh

before_script:
  - cd ../../
  - cp ./k8s/env.example.sh $CONFIG_DIR/env.sh
  - ./k8s/sysadmin/ssh-tunnel.sh

script:
  - ./k8s/start.sh
  - ./run-kubectl.sh -C "/root/admin/run-multinode-tests.sh"

after_success:
  - cd ./openstack/terraform
  - terraform destroy --auto-approve --input=false -var 'user_name=travis' -var "instance_prefix=travis-${TRAVIS_BUILD_NUMBER}-" --var-file=./terraform.tfvars.ci .

after_failure:
  - cd ./openstack/terraform
  - terraform destroy --auto-approve --input=false -var 'user_name=travis' -var "instance_prefix=travis-${TRAVIS_BUILD_NUMBER}-" --var-file=./terraform.tfvars.ci .
