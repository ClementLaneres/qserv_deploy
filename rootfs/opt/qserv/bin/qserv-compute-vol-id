#!/bin/sh

usage() { 
cat << EOD
Usage:`basename $0` [options]

    Available options:
        -t      number of first volume
        -p      volume prefix
        -m      mount point for volume

Create a file contening required variables for attaching volume to workers
Delete volume.tfvars or set attach_volume to 0 to NOT attach volume
Delete volume.tfvars before reusing qserv-compute-vol-id

example: qserv-compute-vol-id -t 100 -p vol-qserv- -m /mnt/qserv 
EOD
}

if [ -f /qserv-deploy/config/volume_list.tfvars ]
then
    echo "Delete old volume_list file to continue and start over";
    exit; 
fi

CLUSTER_CONFIG_DIR=/qserv-deploy/config
# Check if openstack connection parameters are available
OS_RC_FILE="$CLUSTER_CONFIG_DIR/os-openrc.sh"
if [ -z "$OS_PROJECT_NAME" ]; then
    if [ -f "$OS_RC_FILE" ]; then
        . "$OS_RC_FILE"
    else
        echo "ERROR: Missing Openstack resource file: $OS_RC_FILE"
        exit 1
    fi
    if [ -z "$OS_PROJECT_NAME" ]; then
        echo "ERROR: Incorrect Openstack resource file: $OS_RC_FILE"
        exit 1
    fi
fi

while getopts ":t:p:m:" c; do
    case $c in
        t)
            t=${OPTARG} ;;
        p)
            p=${OPTARG} ;;
        m)
            m=${OPTARG} ;;
        \?)
            usage ; exit ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${t}" ] || [ -z "${p}" ] || [ -z "${m}" ]; then
    usage ; exit ;
fi

echo "first volume = ${t}"
echo "volume prefix = ${p}"
echo "mount_point = ${m}"

volume_list=`openstack volume list -c ID -c Name -f csv | grep ${p} | awk -F\, '{ print $2";"$1 }'`
volume_list={`echo ${volume_list} | sed -e 's/\"\ \"/\",\"/g' -e "s/\${p}//g" -e 's/;/=/g'`}

echo "# 1 if volumes must be attached, 0 otherwise" >> $CLUSTER_CONFIG_DIR/volume_list.tfvars
echo "attach_volume=1" >> $CLUSTER_CONFIG_DIR/volume_list.tfvars

echo "# Number of first volume to attach" >> $CLUSTER_CONFIG_DIR/volume_list.tfvars
echo "firstVolume = "$t >> $CLUSTER_CONFIG_DIR/volume_list.tfvars

echo "# Map of volume numbers and their ID" >> $CLUSTER_CONFIG_DIR/volume_list.tfvars
echo "volumeId = "$volume_list >> $CLUSTER_CONFIG_DIR/volume_list.tfvars

echo "# Mount point of all volume" >> $CLUSTER_CONFIG_DIR/volume_list.tfvars
echo "mount_point = \"${m}\"" >> $CLUSTER_CONFIG_DIR/volume_list.tfvars
